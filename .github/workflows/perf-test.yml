name: Perf Test

on:
  workflow_dispatch:
    inputs:
      startThreadsCount:
        description: "Start thread count"
        required: false
        default: "4"
      endThreadsCount:
        description: "End thread count"
        required: false
        default: "30"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          start=${{ github.event.inputs.startThreadsCount }}
          end=${{ github.event.inputs.endThreadsCount }}
          step=2

          arr=()
          for ((i=start; i<=end; )); do
            arr+=($i)
            if [ "$i" -lt 20 ]; then
              i=$((i + step))
              if [ "$i" -gt 20 ]; then
                i=20
              fi
            else
              i=$((i + 5))
            fi
          done

          json=$(printf '%s\n' "${arr[@]}" | jq -R . | jq -s -c .)
          echo "matrix=$json" >> $GITHUB_OUTPUT

  perf-test:
    needs: generate-matrix
    runs-on: [self-hosted, test-02]
    strategy:
      max-parallel: 1 # 顺序执行
      matrix:
        thread: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure JMX
        run: |
          echo "Setting thread count to ${{ matrix.thread }}"
          xmlstarlet ed -L -u '//stringProp[@name="ThreadGroup.num_threads"]' -v '${{ matrix.thread }}' src/test/jmeter/perf.jmx
          echo "Current thread count: $(xmlstarlet sel -t -v '//stringProp[@name="ThreadGroup.num_threads"]' src/test/jmeter/perf.jmx)"

      - name: Run JMeter Test
        env:
          CURRENT_THREAD: ${{ matrix.thread }}
          END_THREAD: ${{ github.event.inputs.endThreadsCount }}
        run: |
          mvn -q package
          mvn -q jmeter:jmeter@configuration2 -DjmeterTest=perf.jmx
          if [ "$CURRENT_THREAD" != "$END_THREAD" ]; then
            echo "Not the last test run, sleeping 300 seconds..."
            sleep 300
          else
            echo "Last test run, skipping sleep."
          fi

      - name: Archive report
        run: |
          TIMESTAMP=$(TZ='Asia/Shanghai' date '+%Y%m%d-%H%M')
          REPORT_DIR="${TIMESTAMP}-${{ matrix.thread }}threads"
          REPORT_NAME="${REPORT_DIR}.tar.gz"
          mv target/jmeter "$REPORT_DIR"
          tar -czf "$REPORT_NAME" "$REPORT_DIR"
          echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
          echo "REPORT_NAME=$REPORT_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_DIR }}
          path: ${{ env.REPORT_NAME }}
