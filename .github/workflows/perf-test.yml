name: Perf Test

on:
  workflow_dispatch:
    inputs:
      startThreadsCount:
        description: "Start thread count"
        required: false
        default: "4"
      endThreadsCount:
        description: "End thread count"
        required: false
        default: "6"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          start=${{ github.event.inputs.startThreadsCount }}
          end=${{ github.event.inputs.endThreadsCount }}
          arr=()
          for ((i=start; i<=end; i++)); do
            arr+=($i)
          done
          json=$(printf '%s\n' "${arr[@]}" | jq -R . | jq -s .)
          echo "matrix=$json" >> $GITHUB_OUTPUT

  perf-test:
    needs: generate-matrix
    runs-on: [self-hosted, test-02]
    strategy:
      max-parallel: 1 # 顺序执行
      matrix:
        thread: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure JMX
        run: |
          echo "Setting thread count to: ${{ matrix.thread }}"
          xmlstarlet ed -L -u '//stringProp[@name="ThreadGroup.num_threads"]' -v '${{ matrix.thread }}' src/test/jmeter/perf.jmx
          echo "Current thread count: $(xmlstarlet sel -t -v '//stringProp[@name="ThreadGroup.num_threads"]' src/test/jmeter/perf.jmx)"

      - name: Run JMeter Test
        env:
          CURRENT_THREAD: ${{ matrix.thread }}
          END_THREAD: ${{ github.event.inputs.endThreadsCount }}
        run: |
          mvn -q package
          mvn -q jmeter:jmeter@configuration2 -DjmeterTest=perf.jmx
          if [ "$CURRENT_THREAD" != "$END_THREAD" ]; then
            echo "Not the last test run, sleeping 300 seconds..."
            sleep 300
          else
            echo "Last test run, skipping sleep."
          fi

      - name: Archive report
        run: |
          REPORT_NAME="${{ matrix.thread }}threads.tar.gz"
          # 将测试报告目录重命名为纯线程数文件夹
          mv target/jmeter "${{ matrix.thread }}threads"
          tar -czf "$REPORT_NAME" "${{ matrix.thread }}threads"
        shell: bash

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: "report-${{ matrix.thread }}"
          path: ${{ matrix.thread }}threads.tar.gz

  aggregate-artifacts:
    runs-on: ubuntu-latest
    needs: perf-test
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: aggregated_reports

      - name: Package all reports
        run: |
          TIMESTAMP=$(TZ='Asia/Shanghai' date '+%Y%m%d-%H%M')
          FINAL_DIR="${TIMESTAMP}-${{ github.event.inputs.startThreadsCount }}-${{ github.event.inputs.endThreadsCount }}"
          mkdir "$FINAL_DIR"
          mv aggregated_reports/report-*.tar.gz "$FINAL_DIR"/
          tar -czf "${FINAL_DIR}.tar.gz" "$FINAL_DIR"
        shell: bash

      - name: Upload final archive
        uses: actions/upload-artifact@v4
        with:
          name: aggregated-results
          path: ${{ github.workspace }}/*.tar.gz
